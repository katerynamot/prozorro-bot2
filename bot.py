import os
import requests
from telegram import Bot, Update
from telegram.ext import Updater, CommandHandler, CallbackContext

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ chat_id –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")  # –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å–∞–º–æ–º—É —Å–µ–±–µ

# –°–ª–æ–≤–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
SEARCH_TERMS = [
    "–≥–µ–æ—Ç–µ–∫—Å—Ç–∏–ª—å",
    "–±–µ–Ω—Ç–æ–Ω—ñ—Ç–æ–≤",
    "–≥–µ–æ—Ä–µ—à—ñ—Ç–∫–∞",
    "–≥–µ–æ–º–µ–º–±—Ä–∞–Ω–∞",
    "–≥–µ–æ—Å—ñ—Ç–∫–∞",
    "–ü—Ä–æ—Ç–∏—Ä–∞–¥—ñ–∞—Ü—ñ–π–Ω–æ–≥–æ —É–∫—Ä–∏—Ç—Ç—è –Ω–æ–≤–µ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ",
    "–ë—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ –∑–∞—Ö–∏—Å–Ω–æ—ó —Å–ø–æ—Ä—É–¥–∏"
]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π –≤ Prozorro
def search_prozorro(query):
    url = f"https://prozorro.gov.ua/uk/search/tender?text={query}&sort=publication_date,desc"
    try:
        r = requests.get(url)
        r.raise_for_status()
        data = r.text
        # –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
        return f"Results for '{query}':\n{data[:500]}...\nLink: {url}"
    except Exception as e:
        return f"Error fetching '{query}': {e}"

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
def start(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ—à—É–∫—É —Ç–µ–Ω–¥–µ—Ä—ñ–≤ –Ω–∞ –ü—Ä–æ–∑–æ—Ä—Ä–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π /search_all –¥–ª—è –æ—Å—Ç–∞–Ω–Ω—ñ—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /search_all
def search_all(update: Update, context: CallbackContext):
    messages = []
    for term in SEARCH_TERMS:
        result = search_prozorro(term)
        messages.append(result)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for msg in messages:
        update.message.reply_text(msg)

def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("search_all", search_all))

    updater.start_polling()
    updater.idle()

if name == "__main__":
    main()

import os
TOKEN = os.environ.get("TELEGRAM_TOKEN")

import os
from telegram.ext import Updater, CommandHandler

# –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("TELEGRAM_TOKEN")

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update, context):
    update.message.reply_text("–ü—Ä–∏–≤–µ—Ç üëã! –Ø —Ç–≤–æ–π Prozorro –±–æ—Ç. –ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.")

# –ö–æ–º–∞–Ω–¥–∞ /help
def help_command(update, context):
    update.message.reply_text(
        "/geo - –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ—Ç–µ–∫—Å—Ç–∏–ª—å'\n"
        "/bentonit - –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–±–µ–Ω—Ç–æ–Ω—ñ—Ç–æ–≤'\n"
        "/georeshetka - –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ—Ä–µ—à—ñ—Ç–∫–∞'\n"
        "/geomembrana - –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ–º–µ–º–±—Ä–∞–Ω–∞'\n"
        "/geosetka - –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ—Å—ñ—Ç–∫–∞'\n"
        "/shelter - –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–ü—Ä–æ—Ç–∏—Ä–∞–¥—ñ–∞—Ü—ñ–π–Ω–æ–≥–æ —É–∫—Ä–∏—Ç—Ç—è –Ω–æ–≤–µ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ'\n"
        "/zashchita - –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–ë—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ –∑–∞—Ö–∏—Å–Ω–æ—ó —Å–ø–æ—Ä—É–¥–∏'\n"
    )

# –ü–æ–∫–∞ —Å–¥–µ–ª–∞–µ–º –ø—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥
def geo(update, context):
    update.message.reply_text("üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ—Ç–µ–∫—Å—Ç–∏–ª—å' (–ø–æ–∫–∞ —Ç–µ—Å—Ç).")

def bentonit(update, context):
    update.message.reply_text("üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ —Å–ª–æ–≤—É '–±–µ–Ω—Ç–æ–Ω—ñ—Ç–æ–≤' (–ø–æ–∫–∞ —Ç–µ—Å—Ç).")

def georeshetka(update, context):
    update.message.reply_text("üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ—Ä–µ—à—ñ—Ç–∫–∞' (–ø–æ–∫–∞ —Ç–µ—Å—Ç).")

def geomembrana(update, context):
    update.message.reply_text("üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ–º–µ–º–±—Ä–∞–Ω–∞' (–ø–æ–∫–∞ —Ç–µ—Å—Ç).")

def geosetka(update, context):
    update.message.reply_text("üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ —Å–ª–æ–≤—É '–≥–µ–æ—Å—ñ—Ç–∫–∞' (–ø–æ–∫–∞ —Ç–µ—Å—Ç).")

def shelter(update, context):
    update.message.reply_text("üèóÔ∏è –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–ü—Ä–æ—Ç–∏—Ä–∞–¥—ñ–∞—Ü—ñ–π–Ω–æ–≥–æ —É–∫—Ä–∏—Ç—Ç—è –Ω–æ–≤–µ –±—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ' (—Ç–µ—Å—Ç).")

def zashchita(update, context):
    update.message.reply_text("üèóÔ∏è –ü–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤—É '–ë—É–¥—ñ–≤–Ω–∏—Ü—Ç–≤–æ –∑–∞—Ö–∏—Å–Ω–æ—ó —Å–ø–æ—Ä—É–¥–∏' (—Ç–µ—Å—Ç).")

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("help", help_command))
    dp.add_handler(CommandHandler("geo", geo))
    dp.add_handler(CommandHandler("bentonit", bentonit))
    dp.add_handler(CommandHandler("georeshetka", georeshetka))
    dp.add_handler(CommandHandler("geomembrana", geomembrana))
    dp.add_handler(CommandHandler("geosetka", geosetka))
    dp.add_handler(CommandHandler("shelter", shelter))
    dp.add_handler(CommandHandler("zashchita", zashchita))

    # –ó–∞–ø—É—Å–∫
    updater.start_polling()
    updater.idle()

if name == "__main__":
    main()
